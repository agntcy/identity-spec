{
  "files": [
    {
      "name": "agntcy/identity/core/v1alpha1/errors.proto",
      "description": "",
      "package": "agntcy.identity.core.v1alpha1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "ErrorReason",
          "longName": "ErrorReason",
          "fullName": "agntcy.identity.core.v1alpha1.ErrorReason",
          "description": "Represents the reason for an error, providing a unique\nconstant value for the error.",
          "values": [
            {
              "name": "ERROR_REASON_UNSPECIFIED",
              "number": "0",
              "description": "ERROR_REASON_UNSPECIFIED indicates that no specific error reason\nhas been specified."
            },
            {
              "name": "ERROR_REASON_INTERNAL",
              "number": "1",
              "description": "An internal error, this happens in case of unexpected condition or failure within the service"
            },
            {
              "name": "ERROR_REASON_INVALID_CREDENTIAL_ENVELOPE_TYPE",
              "number": "2",
              "description": "The credential envelope type is invalid. For valid values refer to\nthe enum CredentialEnvelopeType."
            },
            {
              "name": "ERROR_REASON_INVALID_CREDENTIAL_ENVELOPE_VALUE_FORMAT",
              "number": "3",
              "description": "The credential envelope value format does not correspond to the format\nspecified in envelope_type."
            },
            {
              "name": "ERROR_REASON_INVALID_ISSUER",
              "number": "4",
              "description": "The issuer contains one or more invalid fields."
            },
            {
              "name": "ERROR_REASON_ISSUER_NOT_REGISTERED",
              "number": "5",
              "description": "The issuer is not registered in the Node."
            },
            {
              "name": "ERROR_REASON_INVALID_VERIFIABLE_CREDENTIAL",
              "number": "6",
              "description": "The Verifiable Credential is invalid, this can be related to either\ninvalid format or unable to verify the Data Integrity proof."
            },
            {
              "name": "ERROR_REASON_IDP_REQUIRED",
              "number": "7",
              "description": "An issuer is required to have an external IdP"
            },
            {
              "name": "ERROR_REASON_INVALID_PROOF",
              "number": "8",
              "description": "The proof is invalid"
            },
            {
              "name": "ERROR_REASON_UNSUPPORTED_PROOF",
              "number": "9",
              "description": "The proof type is not supported"
            },
            {
              "name": "ERROR_REASON_RESOLVER_METADATA_NOT_FOUND",
              "number": "10",
              "description": "Unable to resolve an ID to a ResolverMetadata"
            },
            {
              "name": "ERROR_REASON_UNKNOWN_IDP",
              "number": "11",
              "description": "Unknown Identity Provider"
            },
            {
              "name": "ERROR_REASON_ID_ALREADY_REGISTERED",
              "number": "12",
              "description": "The ID and Resolver Metadata are already registered in the system"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "ErrorInfo",
          "longName": "ErrorInfo",
          "fullName": "agntcy.identity.core.v1alpha1.ErrorInfo",
          "description": "Describes the cause of the error with structured details.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "reason",
              "description": "The reason of the error, as defined by the ErrorReason enum.\nThis is a constant unique value that helps identify the cause of\nthe error.",
              "label": "optional",
              "type": "ErrorReason",
              "longType": "ErrorReason",
              "fullType": "agntcy.identity.core.v1alpha1.ErrorReason",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reason",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "The message describing the error in a human-readable way. This\nfield gives additional details about the error.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_message",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "agntcy/identity/core/v1alpha1/id.proto",
      "description": "",
      "package": "agntcy.identity.core.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Jwk",
          "longName": "Jwk",
          "fullName": "agntcy.identity.core.v1alpha1.Jwk",
          "description": "JWK represents:\n- a JSON Web Key (JWK) with the respective fields specific to RSA algorithms.\n- a Quantum JSON Web Key (QJWK) with the respective fields specific to AKP algorithms.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "alg",
              "description": "ALG represents the algorithm intended for use with the key.\nExample algorithms for Post-Quantum ML-DSA family:\n\"ML-DSA-44\", \"ML-DSA-65\", \"ML-DSA-87\".\nSome example algorithms are \"RS256\", \"RS384\", \"RS512\" for RSA algorithms.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_alg",
              "defaultValue": ""
            },
            {
              "name": "kty",
              "description": "KTY represents the key type parameter.\nIt specifies the family of quantum algorithms used with the key,\nsuch as \"AKP\" for post quantum algorithms\nor \"RSA\" for non quantum algorithms.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kty",
              "defaultValue": ""
            },
            {
              "name": "use",
              "description": "Use represents the intended use of the key.\nSome example values are \"enc\" and \"sig\".",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_use",
              "defaultValue": ""
            },
            {
              "name": "kid",
              "description": "KID represents the key ID.\nIt is used to match a specific key.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kid",
              "defaultValue": ""
            },
            {
              "name": "pub",
              "description": "The public key for the AKP kty.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pub",
              "defaultValue": ""
            },
            {
              "name": "priv",
              "description": "The private key for the AKP kty.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_priv",
              "defaultValue": ""
            },
            {
              "name": "seed",
              "description": "Seed used to derive keys for ML-DSA alg.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_seed",
              "defaultValue": ""
            },
            {
              "name": "e",
              "description": "The exponent for the RSA public key.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e",
              "defaultValue": ""
            },
            {
              "name": "n",
              "description": "The modulus for the RSA public key.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_n",
              "defaultValue": ""
            },
            {
              "name": "d",
              "description": "The private exponent for the RSA kty.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_d",
              "defaultValue": ""
            },
            {
              "name": "p",
              "description": "The first prime factor for the RSA private key.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_p",
              "defaultValue": ""
            },
            {
              "name": "q",
              "description": "The second prime factor for the RSA private key.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_q",
              "defaultValue": ""
            },
            {
              "name": "dp",
              "description": "The first factor CRT exponent for the RSA private key.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_dp",
              "defaultValue": ""
            },
            {
              "name": "dq",
              "description": "The second factor CRT exponent for the RSA private key.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_dq",
              "defaultValue": ""
            },
            {
              "name": "qi",
              "description": "The first CRT coefficient for the RSA private key.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_qi",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Jwks",
          "longName": "Jwks",
          "fullName": "agntcy.identity.core.v1alpha1.Jwks",
          "description": "JWKS represents a set of JSON Web Keys (JWKs).",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "keys",
              "description": "Keys represents the list of JSON Web Keys.",
              "label": "repeated",
              "type": "Jwk",
              "longType": "Jwk",
              "fullType": "agntcy.identity.core.v1alpha1.Jwk",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResolverMetadata",
          "longName": "ResolverMetadata",
          "fullName": "agntcy.identity.core.v1alpha1.ResolverMetadata",
          "description": "ResolverMetadata represents a set of data describing the ID including mechanisms such as:\n  - cryptographic public keys - used to authenticate itself and prove\n    association with the ID\n  - service - ways of communicating with the node that published the document\n\nA ResolverMetadata can be retrieved by resolving an ID.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID\nThe metadata below is related as claims to the ID",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "verification_method",
              "description": "VerificationMethod is a list of cryptographic public keys, which can be used\nto authenticate or authorize interactions with the entities represented by the ID.",
              "label": "repeated",
              "type": "VerificationMethod",
              "longType": "VerificationMethod",
              "fullType": "agntcy.identity.core.v1alpha1.VerificationMethod",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "service",
              "description": "Service is used in ResolverMetadatas to express ways of communicating with\nthe node that published the document.",
              "label": "repeated",
              "type": "Service",
              "longType": "Service",
              "fullType": "agntcy.identity.core.v1alpha1.Service",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "assertion_method",
              "description": "AssertionMethod is used to specify how the entity represented by the ID\nis expected to express claims, such as for the purposes of issuing a VCs.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Service",
          "longName": "Service",
          "fullName": "agntcy.identity.core.v1alpha1.Service",
          "description": "Service is used in ResolverMetadata to express ways of communicating with\nthe node that published the document.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "service_endpoint",
              "description": "ServiceEndpoint is a network address, such as an HTTP URL, of the\nnode.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VerificationMethod",
          "longName": "VerificationMethod",
          "fullName": "agntcy.identity.core.v1alpha1.VerificationMethod",
          "description": "VerificationMethod expresses verification methods, such as cryptographic\npublic keys, which can be used to authenticate or authorize interactions\nwith the entities represented by the ID. It is a part of the ResolverMetadata.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "A unique id of the verification method.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "public_key_jwk",
              "description": "The public key used for the verification method.",
              "label": "optional",
              "type": "Jwk",
              "longType": "Jwk",
              "fullType": "agntcy.identity.core.v1alpha1.Jwk",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_public_key_jwk",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "agntcy/identity/core/v1alpha1/issuer.proto",
      "description": "",
      "package": "agntcy.identity.core.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Issuer",
          "longName": "Issuer",
          "fullName": "agntcy.identity.core.v1alpha1.Issuer",
          "description": "A Identity Issuer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "organization",
              "description": "The organization of the issuer",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_organization",
              "defaultValue": ""
            },
            {
              "name": "sub_organization",
              "description": "The sub organization of the issuer",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sub_organization",
              "defaultValue": ""
            },
            {
              "name": "common_name",
              "description": "The common name of the issuer\nCould be a FQDN or a FQDA",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_common_name",
              "defaultValue": ""
            },
            {
              "name": "public_key",
              "description": "This field is optional\nThe keys of the issuer in JWK format\nThe public key is used to verify the signature of the different claims",
              "label": "optional",
              "type": "Jwk",
              "longType": "Jwk",
              "fullType": "agntcy.identity.core.v1alpha1.Jwk",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_public_key",
              "defaultValue": ""
            },
            {
              "name": "private_key",
              "description": "This field is optional\nThe private key of the issuer in JWK format",
              "label": "optional",
              "type": "Jwk",
              "longType": "Jwk",
              "fullType": "agntcy.identity.core.v1alpha1.Jwk",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_private_key",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "agntcy/identity/core/v1alpha1/mcp.proto",
      "description": "",
      "package": "agntcy.identity.core.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "McpResource",
          "longName": "McpResource",
          "fullName": "agntcy.identity.core.v1alpha1.McpResource",
          "description": "McpResource represents a resource available on the MCP server.\nThis can be a file, a database, or any other type of resource.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the resource.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "Description of the resource.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_description",
              "defaultValue": ""
            },
            {
              "name": "uri",
              "description": "URI of the resource.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_uri",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "McpServer",
          "longName": "McpServer",
          "fullName": "agntcy.identity.core.v1alpha1.McpServer",
          "description": "McpServer represents an MCP server that provides a set of tools and resources\nThe server needs to be deployed at a specific URL",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the server.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "url",
              "description": "Url of the deployed server.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_url",
              "defaultValue": ""
            },
            {
              "name": "tools",
              "description": "The tools available on the server.",
              "label": "repeated",
              "type": "McpTool",
              "longType": "McpTool",
              "fullType": "agntcy.identity.core.v1alpha1.McpTool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "resources",
              "description": "The resources available on the server.",
              "label": "repeated",
              "type": "McpResource",
              "longType": "McpResource",
              "fullType": "agntcy.identity.core.v1alpha1.McpResource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "McpTool",
          "longName": "McpTool",
          "fullName": "agntcy.identity.core.v1alpha1.McpTool",
          "description": "McpTool represents a tool available on the MCP server.\nThis can be a function with name, description, and parameters.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the tool.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "Description of the tool.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_description",
              "defaultValue": ""
            },
            {
              "name": "parameters",
              "description": "Parameters of the tool.\nThis is a JSON object that describes the parameters",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_parameters",
              "defaultValue": ""
            },
            {
              "name": "oauth2_metadata",
              "description": "Oauth2 Protected Resource metadata.\nThis will correspond to a resource on the server.\nOr can be specified or overridden by the auth policies.\nThis complies with RFC 9728.",
              "label": "optional",
              "type": "Oauth2Metadata",
              "longType": "Oauth2Metadata",
              "fullType": "agntcy.identity.core.v1alpha1.Oauth2Metadata",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_oauth2_metadata",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Oauth2Metadata",
          "longName": "Oauth2Metadata",
          "fullName": "agntcy.identity.core.v1alpha1.Oauth2Metadata",
          "description": "Oauth2Metadata represents the OAuth2 metadata for a protected resource.\nThis complies with RFC 9728.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "resource",
              "description": "The resource identifier.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_resource",
              "defaultValue": ""
            },
            {
              "name": "authorization_servers",
              "description": "Authorization servers for the OAuth2 server.\nThis is a list of strings, such as \"https://example.com/oauth2/authorize\".",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_authorization_servers",
              "defaultValue": ""
            },
            {
              "name": "bearer_methods_supported",
              "description": "Bearer methods supported\nThis is a list of strings, such as \"client_credentials\" or \"authorization_code\".",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scopes_supported",
              "description": "Scopes supported\nThis is a list of strings, such as \"openid\" or \"profile\".",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "agntcy/identity/core/v1alpha1/vc.proto",
      "description": "",
      "package": "agntcy.identity.core.v1alpha1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "CredentialContentType",
          "longName": "CredentialContentType",
          "fullName": "agntcy.identity.core.v1alpha1.CredentialContentType",
          "description": "The content of the Credential.\nMultiple content types can be supported: AgentBadge, etc.",
          "values": [
            {
              "name": "CREDENTIAL_CONTENT_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Unspecified Content Type."
            },
            {
              "name": "CREDENTIAL_CONTENT_TYPE_AGENT_BADGE",
              "number": "1",
              "description": "AgentBadge Content Type.\nThe Agent content representation following a defined schema\nOASF: https://schema.oasf.agntcy.org/schema/objects/agent\nGoogle A2A: https://github.com/google/A2A/blob/main/specification/json/a2a.json"
            },
            {
              "name": "CREDENTIAL_CONTENT_TYPE_MCP_BADGE",
              "number": "2",
              "description": "McpBadge Content Type.\nThe MCP content representation following a defined schema\nThe schema is defined in the MCP specification as the MCPServer type"
            }
          ]
        },
        {
          "name": "CredentialEnvelopeType",
          "longName": "CredentialEnvelopeType",
          "fullName": "agntcy.identity.core.v1alpha1.CredentialEnvelopeType",
          "description": "The Envelope Type of the Credential.\nMultiple envelope types can be supported: Embedded Proof, JOSE, COSE etc.",
          "values": [
            {
              "name": "CREDENTIAL_ENVELOPE_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Unspecified Envelope Type."
            },
            {
              "name": "CREDENTIAL_ENVELOPE_TYPE_EMBEDDED_PROOF",
              "number": "1",
              "description": "Embedded Proof Envelope Type."
            },
            {
              "name": "CREDENTIAL_ENVELOPE_TYPE_JOSE",
              "number": "2",
              "description": "JOSE Envelope Type."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "BadgeClaims",
          "longName": "BadgeClaims",
          "fullName": "agntcy.identity.core.v1alpha1.BadgeClaims",
          "description": "BadgeClaims represents the content of a Badge VC defined [here]\n\n[here]: https://spec.identity.agntcy.org/docs/vc/intro/",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID as defined [here]\n\n[here]: https://www.w3.org/TR/vc-data-model/#credential-subject",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "badge",
              "description": "The content of the badge",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_badge",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CredentialContent",
          "longName": "CredentialContent",
          "fullName": "agntcy.identity.core.v1alpha1.CredentialContent",
          "description": "CredentialContent represents the content of a Verifiable Credential.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "content_type",
              "description": "Type specifies the type of the content of the credential.",
              "label": "optional",
              "type": "CredentialContentType",
              "longType": "CredentialContentType",
              "fullType": "agntcy.identity.core.v1alpha1.CredentialContentType",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_content_type",
              "defaultValue": ""
            },
            {
              "name": "content",
              "description": "The content representation in JSON-LD format.",
              "label": "optional",
              "type": "Struct",
              "longType": "google.protobuf.Struct",
              "fullType": "google.protobuf.Struct",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_content",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CredentialSchema",
          "longName": "CredentialSchema",
          "fullName": "agntcy.identity.core.v1alpha1.CredentialSchema",
          "description": "CredentialSchema represents the credentialSchema property of a Verifiable Credential.\nmore information can be found [here]\n\n[here]: https://www.w3.org/TR/vc-data-model-2.0/#data-schemas",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "Type specifies the type of the file",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_type",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "The URL identifying the schema file",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EnvelopedCredential",
          "longName": "EnvelopedCredential",
          "fullName": "agntcy.identity.core.v1alpha1.EnvelopedCredential",
          "description": "EnvelopedCredential represents a Credential enveloped in a specific format.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "envelope_type",
              "description": "EnvelopeType specifies the type of the envelope used to store the credential.",
              "label": "optional",
              "type": "CredentialEnvelopeType",
              "longType": "CredentialEnvelopeType",
              "fullType": "agntcy.identity.core.v1alpha1.CredentialEnvelopeType",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_envelope_type",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Value is the enveloped credential in the specified format.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_value",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Proof",
          "longName": "Proof",
          "fullName": "agntcy.identity.core.v1alpha1.Proof",
          "description": "A data integrity proof provides information about the proof mechanism,\nparameters required to verify that proof, and the proof value itself.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "The type of the proof",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_type",
              "defaultValue": ""
            },
            {
              "name": "proof_purpose",
              "description": "The proof purpose",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proof_purpose",
              "defaultValue": ""
            },
            {
              "name": "proof_value",
              "description": "The proof value",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proof_value",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VerifiableCredential",
          "longName": "VerifiableCredential",
          "fullName": "agntcy.identity.core.v1alpha1.VerifiableCredential",
          "description": "DataModel represents the W3C Verifiable Credential Data Model defined [here]\n\n[here]: https://www.w3.org/TR/vc-data-model/",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "context",
              "description": "https://www.w3.org/TR/vc-data-model/#contexts",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "https://www.w3.org/TR/vc-data-model/#dfn-type",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "issuer",
              "description": "https://www.w3.org/TR/vc-data-model/#issuer",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_issuer",
              "defaultValue": ""
            },
            {
              "name": "content",
              "description": "https://www.w3.org/TR/vc-data-model/#credential-subject",
              "label": "optional",
              "type": "Struct",
              "longType": "google.protobuf.Struct",
              "fullType": "google.protobuf.Struct",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_content",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "https://www.w3.org/TR/vc-data-model/#identifiers",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "issuance_date",
              "description": "https://www.w3.org/TR/vc-data-model/#issuance-date",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_issuance_date",
              "defaultValue": ""
            },
            {
              "name": "expiration_date",
              "description": "https://www.w3.org/TR/vc-data-model/#expiration",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_expiration_date",
              "defaultValue": ""
            },
            {
              "name": "credential_schema",
              "description": "https://www.w3.org/TR/vc-data-model-2.0/#data-schemas",
              "label": "repeated",
              "type": "CredentialSchema",
              "longType": "CredentialSchema",
              "fullType": "agntcy.identity.core.v1alpha1.CredentialSchema",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proof",
              "description": "https://w3id.org/security#proof",
              "label": "optional",
              "type": "Proof",
              "longType": "Proof",
              "fullType": "agntcy.identity.core.v1alpha1.Proof",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proof",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VerifiablePresentation",
          "longName": "VerifiablePresentation",
          "fullName": "agntcy.identity.core.v1alpha1.VerifiablePresentation",
          "description": "DataModel represents the W3C Verifiable Presentation Data Model defined [here]\n\n[here]: https://www.w3.org/TR/vc-data-model/",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "context",
              "description": "https://www.w3.org/TR/vc-data-model/#contexts",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "https://www.w3.org/TR/vc-data-model/#dfn-type",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "verifiable_credential",
              "description": "https://www.w3.org/2018/credentials#verifiableCredential",
              "label": "repeated",
              "type": "VerifiableCredential",
              "longType": "VerifiableCredential",
              "fullType": "agntcy.identity.core.v1alpha1.VerifiableCredential",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proof",
              "description": "https://w3id.org/security#proof",
              "label": "optional",
              "type": "Proof",
              "longType": "Proof",
              "fullType": "agntcy.identity.core.v1alpha1.Proof",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proof",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "agntcy/identity/issuer/v1alpha1/local_service.proto",
      "description": "",
      "package": "agntcy.identity.issuer.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "IssueVCRequest",
          "longName": "IssueVCRequest",
          "fullName": "agntcy.identity.issuer.v1alpha1.IssueVCRequest",
          "description": "Issues a Verifiable Credential in a specific Envelope Type",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ID is the identifier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "content",
              "description": "Content of the VC",
              "label": "",
              "type": "CredentialContent",
              "longType": "agntcy.identity.core.v1alpha1.CredentialContent",
              "fullType": "agntcy.identity.core.v1alpha1.CredentialContent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "envelope_type",
              "description": "Envelope type",
              "label": "",
              "type": "CredentialEnvelopeType",
              "longType": "agntcy.identity.core.v1alpha1.CredentialEnvelopeType",
              "fullType": "agntcy.identity.core.v1alpha1.CredentialEnvelopeType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "IssueVCResponse",
          "longName": "IssueVCResponse",
          "fullName": "agntcy.identity.issuer.v1alpha1.IssueVCResponse",
          "description": "Returns the Verifiable Credential in the requested Envelope Type",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vc",
              "description": "The issued VC",
              "label": "",
              "type": "EnvelopedCredential",
              "longType": "agntcy.identity.core.v1alpha1.EnvelopedCredential",
              "fullType": "agntcy.identity.core.v1alpha1.EnvelopedCredential",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyGenResponse",
          "longName": "KeyGenResponse",
          "fullName": "agntcy.identity.issuer.v1alpha1.KeyGenResponse",
          "description": "Returns the generated keypair in Json Web Key (JWK) format",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "keypair",
              "description": "The generated keypair",
              "label": "",
              "type": "Jwk",
              "longType": "agntcy.identity.core.v1alpha1.Jwk",
              "fullType": "agntcy.identity.core.v1alpha1.Jwk",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "LocalService",
          "longName": "LocalService",
          "fullName": "agntcy.identity.issuer.v1alpha1.LocalService",
          "description": "LocalService is the service that provides LOCAL issuer operations.",
          "methods": [
            {
              "name": "KeyGen",
              "description": "Generate a keypair in Json Web Key (JWK) format",
              "requestType": "Empty",
              "requestLongType": ".google.protobuf.Empty",
              "requestFullType": "google.protobuf.Empty",
              "requestStreaming": false,
              "responseType": "KeyGenResponse",
              "responseLongType": "KeyGenResponse",
              "responseFullType": "agntcy.identity.issuer.v1alpha1.KeyGenResponse",
              "responseStreaming": false
            },
            {
              "name": "IssueVC",
              "description": "Issue a Verifiable Credential in a specific Envelope Type",
              "requestType": "IssueVCRequest",
              "requestLongType": "IssueVCRequest",
              "requestFullType": "agntcy.identity.issuer.v1alpha1.IssueVCRequest",
              "requestStreaming": false,
              "responseType": "IssueVCResponse",
              "responseLongType": "IssueVCResponse",
              "responseFullType": "agntcy.identity.issuer.v1alpha1.IssueVCResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "agntcy/identity/node/v1alpha1/id_service.proto",
      "description": "",
      "package": "agntcy.identity.node.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GenerateRequest",
          "longName": "GenerateRequest",
          "fullName": "agntcy.identity.node.v1alpha1.GenerateRequest",
          "description": "Generate an Id and its corresponding ResolverMetadata for the specified Issuer\nFor external IdPs, the Issuer should be provided with a Proof of ownership\nof the Issuer's provided id",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "issuer",
              "description": "The Issuer details",
              "label": "",
              "type": "Issuer",
              "longType": "agntcy.identity.core.v1alpha1.Issuer",
              "fullType": "agntcy.identity.core.v1alpha1.Issuer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proof",
              "description": "Optional Proof of ownership of the Issuer's provided id\nThis should be provided when the Issuer is provided by an external IdP\nExample: a signed JWT",
              "label": "optional",
              "type": "Proof",
              "longType": "agntcy.identity.core.v1alpha1.Proof",
              "fullType": "agntcy.identity.core.v1alpha1.Proof",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proof",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GenerateResponse",
          "longName": "GenerateResponse",
          "fullName": "agntcy.identity.node.v1alpha1.GenerateResponse",
          "description": "Returns the Generated Id and its corresponding ResolverMetadata",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resolver_metadata",
              "description": "The ResolverMetadata corresponding to the generated Id",
              "label": "",
              "type": "ResolverMetadata",
              "longType": "agntcy.identity.core.v1alpha1.ResolverMetadata",
              "fullType": "agntcy.identity.core.v1alpha1.ResolverMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResolveRequest",
          "longName": "ResolveRequest",
          "fullName": "agntcy.identity.node.v1alpha1.ResolveRequest",
          "description": "Resolve a specified Id to its corresponding ResolverMetadata",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Id is the identifier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResolveResponse",
          "longName": "ResolveResponse",
          "fullName": "agntcy.identity.node.v1alpha1.ResolveResponse",
          "description": "Returns the ResolverMetadata corresponding to the specified Id",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resolver_metadata",
              "description": "The ResolverMetadata resolved from the Id",
              "label": "",
              "type": "ResolverMetadata",
              "longType": "agntcy.identity.core.v1alpha1.ResolverMetadata",
              "fullType": "agntcy.identity.core.v1alpha1.ResolverMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "IdService",
          "longName": "IdService",
          "fullName": "agntcy.identity.node.v1alpha1.IdService",
          "description": "IdService is the service that provides ID operations.",
          "methods": [
            {
              "name": "Generate",
              "description": "Generate an Id and its corresponding ResolverMetadata for the specified Issuer",
              "requestType": "GenerateRequest",
              "requestLongType": "GenerateRequest",
              "requestFullType": "agntcy.identity.node.v1alpha1.GenerateRequest",
              "requestStreaming": false,
              "responseType": "GenerateResponse",
              "responseLongType": "GenerateResponse",
              "responseFullType": "agntcy.identity.node.v1alpha1.GenerateResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/id/generate",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Resolve",
              "description": "Resolve a specified Id to its corresponding ResolverMetadata",
              "requestType": "ResolveRequest",
              "requestLongType": "ResolveRequest",
              "requestFullType": "agntcy.identity.node.v1alpha1.ResolveRequest",
              "requestStreaming": false,
              "responseType": "ResolveResponse",
              "responseLongType": "ResolveResponse",
              "responseFullType": "agntcy.identity.node.v1alpha1.ResolveResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/id/resolve",
                      "body": "*"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "agntcy/identity/node/v1alpha1/issuer_service.proto",
      "description": "",
      "package": "agntcy.identity.node.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GetIssuerWellKnownRequest",
          "longName": "GetIssuerWellKnownRequest",
          "fullName": "agntcy.identity.node.v1alpha1.GetIssuerWellKnownRequest",
          "description": "Request to get the well-known JWKS document of an issuer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "common_name",
              "description": "The common name of the issuer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetIssuerWellKnownResponse",
          "longName": "GetIssuerWellKnownResponse",
          "fullName": "agntcy.identity.node.v1alpha1.GetIssuerWellKnownResponse",
          "description": "Returns the content of the well-known JWKS document",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "jwks",
              "description": "The well-known Json Web Key Set (JWKS) document",
              "label": "",
              "type": "Jwks",
              "longType": "agntcy.identity.core.v1alpha1.Jwks",
              "fullType": "agntcy.identity.core.v1alpha1.Jwks",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RegisterIssuerRequest",
          "longName": "RegisterIssuerRequest",
          "fullName": "agntcy.identity.node.v1alpha1.RegisterIssuerRequest",
          "description": "Request to register an issuer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "issuer",
              "description": "The Issuer to register.",
              "label": "",
              "type": "Issuer",
              "longType": "agntcy.identity.core.v1alpha1.Issuer",
              "fullType": "agntcy.identity.core.v1alpha1.Issuer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proof",
              "description": "Optional Proof of ownership of the Issuer's common_name\nThis should be provided when the Issuer is provided by an external IdP\nExample: a signed JWT",
              "label": "optional",
              "type": "Proof",
              "longType": "agntcy.identity.core.v1alpha1.Proof",
              "fullType": "agntcy.identity.core.v1alpha1.Proof",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proof",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RegisterIssuerResponse",
          "longName": "RegisterIssuerResponse",
          "fullName": "agntcy.identity.node.v1alpha1.RegisterIssuerResponse",
          "description": "Returns the action to take to complete the registration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "uri",
              "description": "Optional: a uri indicating an action to take to complete the registration\nDepending on the issuer type, this could be a validation URL",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_uri",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "IssuerService",
          "longName": "IssuerService",
          "fullName": "agntcy.identity.node.v1alpha1.IssuerService",
          "description": "IssuerService is the service that provides ISSUER node operations.",
          "methods": [
            {
              "name": "Register",
              "description": "Register an issuer by providing the issuer details",
              "requestType": "RegisterIssuerRequest",
              "requestLongType": "RegisterIssuerRequest",
              "requestFullType": "agntcy.identity.node.v1alpha1.RegisterIssuerRequest",
              "requestStreaming": false,
              "responseType": "RegisterIssuerResponse",
              "responseLongType": "RegisterIssuerResponse",
              "responseFullType": "agntcy.identity.node.v1alpha1.RegisterIssuerResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/issuer/register",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetWellKnown",
              "description": "Returns the well-known document content for an issuer in\nJson Web Key Set (JWKS) format",
              "requestType": "GetIssuerWellKnownRequest",
              "requestLongType": "GetIssuerWellKnownRequest",
              "requestFullType": "agntcy.identity.node.v1alpha1.GetIssuerWellKnownRequest",
              "requestStreaming": false,
              "responseType": "GetIssuerWellKnownResponse",
              "responseLongType": "GetIssuerWellKnownResponse",
              "responseFullType": "agntcy.identity.node.v1alpha1.GetIssuerWellKnownResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1alpha1/issuer/{common_name}/.well-known/jwks.json"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "agntcy/identity/node/v1alpha1/vc_service.proto",
      "description": "",
      "package": "agntcy.identity.node.v1alpha1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GetVcWellKnownRequest",
          "longName": "GetVcWellKnownRequest",
          "fullName": "agntcy.identity.node.v1alpha1.GetVcWellKnownRequest",
          "description": "Requests the well-known VCs for an Id",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The identifier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetVcWellKnownResponse",
          "longName": "GetVcWellKnownResponse",
          "fullName": "agntcy.identity.node.v1alpha1.GetVcWellKnownResponse",
          "description": "Returns the well-known VCs for an Id",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vcs",
              "description": "The list of VCs for the specified Id",
              "label": "repeated",
              "type": "EnvelopedCredential",
              "longType": "agntcy.identity.core.v1alpha1.EnvelopedCredential",
              "fullType": "agntcy.identity.core.v1alpha1.EnvelopedCredential",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PublishRequest",
          "longName": "PublishRequest",
          "fullName": "agntcy.identity.node.v1alpha1.PublishRequest",
          "description": "Request to publish an issued Verifiable Credential",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "vc",
              "description": "The Verifiable Credential to publish",
              "label": "",
              "type": "EnvelopedCredential",
              "longType": "agntcy.identity.core.v1alpha1.EnvelopedCredential",
              "fullType": "agntcy.identity.core.v1alpha1.EnvelopedCredential",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proof",
              "description": "Optional Proof of ownership of the Issuer's ResolverMetadata\nThis should be provided when the Issuer is provided by an external IdP\nExample: a signed JWT",
              "label": "optional",
              "type": "Proof",
              "longType": "agntcy.identity.core.v1alpha1.Proof",
              "fullType": "agntcy.identity.core.v1alpha1.Proof",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proof",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchRequest",
          "longName": "SearchRequest",
          "fullName": "agntcy.identity.node.v1alpha1.SearchRequest",
          "description": "Request to search for VCs based on the specified criteria",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ID is the identifier.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schema",
              "description": "Schema is the schema of the credential contained in the VC",
              "label": "",
              "type": "CredentialSchema",
              "longType": "agntcy.identity.core.v1alpha1.CredentialSchema",
              "fullType": "agntcy.identity.core.v1alpha1.CredentialSchema",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "content",
              "description": "The credential content representation in JSON-LD format",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchResponse",
          "longName": "SearchResponse",
          "fullName": "agntcy.identity.node.v1alpha1.SearchResponse",
          "description": "Returns the VCs that match the search criteria",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vcs",
              "description": "The list of VCs that match the search criteria",
              "label": "repeated",
              "type": "EnvelopedCredential",
              "longType": "agntcy.identity.core.v1alpha1.EnvelopedCredential",
              "fullType": "agntcy.identity.core.v1alpha1.EnvelopedCredential",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VerifyRequest",
          "longName": "VerifyRequest",
          "fullName": "agntcy.identity.node.v1alpha1.VerifyRequest",
          "description": "Request to verify an existing Verifiable Credential",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vc",
              "description": "The Verifiable Credential to verify",
              "label": "",
              "type": "EnvelopedCredential",
              "longType": "agntcy.identity.core.v1alpha1.EnvelopedCredential",
              "fullType": "agntcy.identity.core.v1alpha1.EnvelopedCredential",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "VcService",
          "longName": "VcService",
          "fullName": "agntcy.identity.node.v1alpha1.VcService",
          "description": "VC is the service that provides VC operations.",
          "methods": [
            {
              "name": "Publish",
              "description": "Publish an issued Verifiable Credential",
              "requestType": "PublishRequest",
              "requestLongType": "PublishRequest",
              "requestFullType": "agntcy.identity.node.v1alpha1.PublishRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/vc/publish",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "Verify",
              "description": "Verify an existing Verifiable Credential",
              "requestType": "VerifyRequest",
              "requestLongType": "VerifyRequest",
              "requestFullType": "agntcy.identity.node.v1alpha1.VerifyRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/vc/verify",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetWellKnown",
              "description": "Returns the well-known Verifiable Credentials for the specified Id",
              "requestType": "GetVcWellKnownRequest",
              "requestLongType": "GetVcWellKnownRequest",
              "requestFullType": "agntcy.identity.node.v1alpha1.GetVcWellKnownRequest",
              "requestStreaming": false,
              "responseType": "GetVcWellKnownResponse",
              "responseLongType": "GetVcWellKnownResponse",
              "responseFullType": "agntcy.identity.node.v1alpha1.GetVcWellKnownResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/v1alpha1/vc/{id}/.well-known/vcs.json"
                    }
                  ]
                }
              }
            },
            {
              "name": "Search",
              "description": "Search for Verifiable Credentials based on the specified criteria",
              "requestType": "SearchRequest",
              "requestLongType": "SearchRequest",
              "requestFullType": "agntcy.identity.node.v1alpha1.SearchRequest",
              "requestStreaming": false,
              "responseType": "SearchResponse",
              "responseLongType": "SearchResponse",
              "responseFullType": "agntcy.identity.node.v1alpha1.SearchResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1alpha1/vc/search",
                      "body": "*"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}