#!/bin/bash

# Read all files in the static folder ../static/api/jsonschema/v1alpha1/generated/jsonschema
# and generate a MDX file for each file

# Some constants
PATH_TO_JSONSCHEMA="static/api/jsonschema/core/v1alpha1"
PATH_TO_OUTPUT="./jsonschema/agntcy/identity/core/v1alpha1"
FILES_PREFIX="agntcy.identity.core.v1alpha1."

# Add all refs
function do_add_refs() {
    # Gather imports
    imports=""
    for entry in ./$PATH_TO_JSONSCHEMA/*.jsonschema.json; do
      # Get the name of the file without the prefix
      name=$(do_parse_entry_name $entry)

      # Get the filename without the path and extension
      filename=$(basename "$entry")

      # Add the ref to the refs object
      echo "  \"$filename\": $name," >> $output_file

      # Add the ref to the imports array
      imports="${imports}import ${name} from \"@site/${PATH_TO_JSONSCHEMA}/${FILES_PREFIX}${name}.jsonschema.json\";\n"
    done

    # Remove the last newline from the imports array
    imports=${imports%"\n"}

    echo $imports
}

# Parse entry name
function do_parse_entry_name() {
  # Get the filename without the path and extension
  filename=$(basename "$1" .jsonschema.json)

  # Get the name of the file without the prefix
  name=${filename#$FILES_PREFIX}

  # Get the name of the file without the suffix
  name=${name%.jsonschema}

  echo $name
}

# Cleanup
function do_cleanup() {
  # Remove all files in the output folder
  rm -rf $PATH_TO_OUTPUT/*.mdx
}

# Generate mdx files
function do_generate() {
    for entry in ./$PATH_TO_JSONSCHEMA/*.jsonschema.json; do
      # Get the name of the file without the prefix
      name=$(do_parse_entry_name $entry)

      # Create the output file with the same name as the input file
      output_file="${PATH_TO_OUTPUT}/$name.mdx"

      # Check if the output file already exists
      if [ -f "$output_file" ]; then
        continue
      fi


      # Create the output file
      cat >> $output_file <<EOF
import CodeBlock from '@theme/CodeBlock';
import Schema from "@site/${PATH_TO_JSONSCHEMA}/${FILES_PREFIX}${name}.jsonschema.json";
import JSONSchemaViewer from "@theme/JSONSchemaViewer";
EOF

    cat >> $output_file <<EOF

export const refs = {
EOF

    imports=$(do_add_refs)

    cat >> $output_file <<EOF
};
export const get = function anonymous(ref) { return refs[ref + ""]; };
export const resolverOptions = {resolvers:{file: {resolve: get}}};

# ${name}
<JSONSchemaViewer schema={Schema} resolverOptions={resolverOptions} />

## Source :
<CodeBlock language="json-schema">{JSON.stringify(Schema, null, 2)}</CodeBlock>
EOF

    # Write to the top of the file if array not empty
    if [ ${#imports[@]} -gt 0 ]; then
      echo -e "${imports[*]}\n$(cat $output_file)" > $output_file
    fi

    done
}

# Run
do_cleanup
do_generate
